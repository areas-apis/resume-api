openapi: 3.1.0

info:
  title: Resume API
  summary: "The Resume API is your resume’s source of truth. Use it to store your resume and retrieve it for a variety of use cases. For example, you can use this service to display your resume on your website, or make it available as a PDF — all from a single source."
  description: |
    to-do
  contact:
    name: Christian Areas
    email: me@areas.me
  license:
    name: GNU General Public License v3.0
    identifier: GPL-3.0
  version: 0.1.0

servers:
  - url: http://localhost:3000/api
    description: Local

tags:
  - name: candidate
  - name: who
  - name: experience
  - name: skills
  - name: education

paths:
  /candidate:
    post:
      tags:
        - candidate
      operationId: createCandidate
      summary: Create a Candidate
      description: |
        Create a candidate in the system.
      requestBody:
        $ref: "#/components/requestBodies/createCandidate"
      responses:
        "201":
          $ref: "#/components/responses/candidateCreated"
        "400":
          $ref: "#/components/responses/candidateBadRequest"
        "409":
          $ref: "#/components/responses/candidateAlreadyExists"

  "/candidate/{candidateId}":
    get:
      tags:
        - candidate
      operationId: getCandidate
      summary: Get a Candidate
      description: |
        Get a candidate from the system.
      parameters:
        - $ref: "#/components/parameters/candidateId"
      responses:
        "200":
          $ref: "#/components/responses/candidate"
        "400":
          $ref: "#/components/responses/candidateBadRequest"
        "404":
          $ref: "#/components/responses/candidateNotFound"
    patch:
      tags:
        - candidate
      operationId: updateCandidate
      summary: Update a Candidate
      description: |
        Update a candidate in the system.
      parameters:
        - $ref: "#/components/parameters/candidateId"
      requestBody:
        $ref: "#/components/requestBodies/updateCandidate"
      responses:
        "200":
          $ref: "#/components/responses/candidate"
        "400":
          $ref: "#/components/responses/candidateBadRequest"
        "404":
          $ref: "#/components/responses/candidateNotFound"
    delete:
      tags:
        - candidate
      operationId: deleteCandidate
      summary: Delete a Candidate
      description: |
        Delete a candidate from the system.
      parameters:
        - $ref: "#/components/parameters/candidateId"
      responses:
        "200":
          $ref: "#/components/responses/candidate"
        "400":
          $ref: "#/components/responses/candidateBadRequest"
        "404":
          $ref: "#/components/responses/candidateNotFound"

components:
  schemas:
    Candidate:
      $ref: "./models/Candidate.yaml"
    Who:
      $ref: "./models/Who.yaml"
    Experience:
      $ref: "./models/Experience.yaml"
    Skills:
      $ref: "./models/Skills.yaml"
    Education:
      $ref: "./models/Education.yaml"

  parameters:
    candidateId:  
      name: candidateId
      in: path
      description: The candidate’s unique identifier.
      required: true
      schema:
        type: string
        format: uuid
        example: d5a5e5dc-f2dd-4f5a-8745-0e835d9f26a5

  requestBodies:
    createCandidate:
      # description: |
      #   to-do
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Candidate/oneOf/1"
    updateCandidate:
      # description: |
      #   to-do
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Candidate/oneOf/2"

  responses:
    # 200
    candidate:
      description: OK
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Candidate/oneOf/0"
    # 201
    candidateCreated:
      description: Created
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Candidate/oneOf/0"
    # 400
    candidateBadRequest:
      description: Candidate bad request
    # 404
    candidateNotFound:
      description: Candidate not found
    # 409
    candidateAlreadyExists:
      description: Candidate already exists
    
    
