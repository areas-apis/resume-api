openapi: 3.1.0

info:
  title: Resume API
  description: |
    The Resume API is your resume’s source of truth. Use it to store your resume and retrieve it for a variety of use cases. For example, you can use this service to display your resume on your website, or make it available as a PDF — all from a single source.
  contact:
    name: Christian Areas
    email: me@areas.me
  license:
    name: GNU General Public License v3.0
    identifier: GPL-3.0
  version: 0.1.0

servers:
  - url: 'http://localhost:3000/api/v0'
    description: Local
  - url: 'https://resume-stage.areas.me/api/v0'
    description: Stage
  - url: 'https://resume.areas.me/api/v0'
    description: Production

tags:
  - name: Resume
  - name: Candidate
  - name: Who
  - name: Experience
  - name: Skill
  - name: Education

paths:
  '/candidate':
    # POST /candidate (createCandidate)
    $ref: './paths/candidate/candidate.yaml'

  '/candidate/{candidateId}':
    # GET /candidate/{candidateId} (getCandidate)
    # PATCH /candidate/{candidateId} (updateCandidate)
    # DELETE /candidate/{candidateId} (deleteCandidate)
    $ref: './paths/candidate/candidateId.yaml'

  '/candidate/{candidateId}/who':
    # POST /candidate/{candidateId}/who (createWho)
    $ref: './paths/who/who.yaml'

  '/candidate/{candidateId}/who/{whoId}':
    # GET /candidate/{candidateId}/who/{whoId} (getWho)
    # PATCH /candidate/{candidateId}/who/{whoId} (updateWho)
    # DELETE /candidate/{candidateId}/who/{whoId} (deleteWho)
    $ref: './paths/who/whoId.yaml'

  '/candidate/{candidateId}/experience':
    # POST /candidate/{candidateId}/experience (createExperience)
    $ref: './paths/experience/experience.yaml'

  '/candidate/{candidateId}/experience/{experienceId}':
    # GET /candidate/{candidateId}/experience/{experienceId} (getExperience)
    # PATCH /candidate/{candidateId}/experience/{experienceId} (updateExperience)
    # DELETE /candidate/{candidateId}/experience/{experienceId} (deleteExperience)
    $ref: './paths/experience/experienceId.yaml'

  '/candidate/{candidateId}/skill':
    # POST /candidate/{candidateId}/skill (createSkill)
    $ref: './paths/skill/skill.yaml'

  '/candidate/{candidateId}/skill/{skillId}':
    # GET /candidate/{candidateId}/skill/{skillId} (getSkill)
    # PATCH /candidate/{candidateId}/skill/{skillId} (updateSkill)
    # DELETE /candidate/{candidateId}/skill/{skillId} (deleteSkill)
    $ref: './paths/skill/skillId.yaml'

  '/candidate/{candidateId}/education':
    # POST /candidate/{candidateId}/education (createEducation)
    $ref: './paths/education/education.yaml'

  '/candidate/{candidateId}/education/{educationId}':
    # GET /candidate/{candidateId}/education/{educationId} (getEducation)
    # PATCH /candidate/{candidateId}/education/{educationId} (updateEducation)
    # DELETE /candidate/{candidateId}/education/{educationId} (deleteEducation)
    $ref: './paths/education/educationId.yaml'

components:
  # schemas:
  #   Candidate:
  #     $ref: './models/Candidate.yaml'
  #   Who:
  #     $ref: './models/Who.yaml'
  #   Experience:
  #     $ref: './models/Experience.yaml'
  #   Skill:
  #     $ref: './models/Skill.yaml'
  #   Education:
  #     $ref: './models/Education.yaml'

  parameters:
    candidateId:
      $ref: './parameters/candidateId.yaml'
    whoId:
      $ref: './parameters/whoId.yaml'
    experienceId:
      $ref: './parameters/experienceId.yaml'
    skillId:
      $ref: './parameters/skillId.yaml'
    educationId:
      $ref: './parameters/educationId.yaml'

  requestBodies:
    createCandidate:
      $ref: './request-bodies/candidate/createCandidate.yaml'
    updateCandidate:
      $ref: './request-bodies/candidate/updateCandidate.yaml'
    createWho:
      $ref: './request-bodies/who/createWho.yaml'
    updateWho:
      $ref: './request-bodies/who/updateWho.yaml'
    createExperience:
      $ref: './request-bodies/experience/createExperience.yaml'
    updateExperience:
      $ref: './request-bodies/experience/updateExperience.yaml'
    createSkill:
      $ref: './request-bodies/skill/createSkill.yaml'
    updateSkill:
      $ref: './request-bodies/skill/updateSkill.yaml'
    createEducation:
      $ref: './request-bodies/education/createEducation.yaml'
    updateEducation:
      $ref: './request-bodies/education/updateEducation.yaml'

  responses:
    # Candidate 200
    candidate:
      description: OK
      content:
        application/json:
          schema:
            $ref: './models/Candidate.yaml#/oneOf/0'
    # Candidate 201
    candidateCreated:
      description: Created
      content:
        application/json:
          schema:
            $ref: './models/Candidate.yaml#/oneOf/0'
    # Candidate 400
    candidateInfoMissingIncorrect:
      description: Candidate information missing or incorrect
    # Candidate 404
    candidateNotFound:
      description: Candidate not found
    # Candidate 409
    candidateAlreadyExists:
      description: Candidate already exists
    # Who 200
    who:
      description: OK
      content:
        application/json:
          schema:
            $ref: './models/Who.yaml#/oneOf/0'
    # Who 201
    whoCreated:
      description: Created
      content:
        application/json:
          schema:
            $ref: './models/Who.yaml#/oneOf/0'
    # Who 400
    whoInfoMissingIncorrect:
      description: Who information missing or incorrect
    # Who 404
    whoNotFound:
      description: Who not found
    # Who 409
    whoAlreadyExists:
      description: Who already exists
    # Experience 200
    experience:
      description: OK
      content:
        application/json:
          schema:
            $ref: './models/Experience.yaml#/oneOf/0'
    # Experience 201
    experienceCreated:
      description: Created
      content:
        application/json:
          schema:
            $ref: './models/Experience.yaml#/oneOf/0'
    # Experience 400
    experienceInfoMissingIncorrect:
      description: Experience information missing or incorrect
    # Experience 404
    experienceNotFound:
      description: Experience not found
    # Experience 409
    experienceAlreadyExists:
      description: Experience already exists
    # Skill 200
    skill:
      description: OK
      content:
        application/json:
          schema:
            $ref: './models/Skill.yaml#/oneOf/0'
    # Skill 201
    skillCreated:
      description: Created
      content:
        application/json:
          schema:
            $ref: './models/Skill.yaml#/oneOf/0'
    # Skill 400
    skillInfoMissingIncorrect:
      description: Skill information missing or incorrect
    # Skill 404
    skillNotFound:
      description: Skill not found
    # Skill 409
    skillAlreadyExists:
      description: Skill already exists
    # Education 200
    education:
      description: OK
      content:
        application/json:
          schema:
            $ref: './models/Education.yaml#/oneOf/0'
    # Education 201
    educationCreated:
      description: Created
      content:
        application/json:
          schema:
            $ref: './models/Education.yaml#/oneOf/0'
    # Education 400
    educationInfoMissingIncorrect:
      description: Education information missing or incorrect
    # Education 404
    educationNotFound:
      description: Education not found
    # Education 409
    educationAlreadyExists:
      description: Education already exists
